{# templates/alerts.html #}
{% extends "layout.html" %}

{% block content %}
{# ─── FILTER BAR (with dropdowns) ─── #}
<div class="row g-2 align-items-end mb-4">
  <!-- 1) How many indicators must match (Dropdown) -->
  <div class="col-6 col-md-2">
    <label for="num_to_match" class="form-label">
      <i class="bi bi-funnel-fill"></i> Match
    </label>
    <select id="num_to_match" class="form-select">
      <option value="1">1 of 4</option>
      <option value="2">2 of 4</option>
      <option value="3">3 of 4</option>
      <option value="4">4 of 4</option>
    </select>
  </div>

  <!-- 2) SMA length (dropdown of common lengths) -->
  <div class="col-6 col-md-2">
    <label for="SMA_length" class="form-label">
      <i class="bi bi-graph-up-arrow"></i> SMA
    </label>
    <select id="SMA_length" class="form-select">
      <option value="" disabled selected>Length</option>
      <option value="10">10</option>
      <option value="20">20</option>
      <option value="50">50</option>
      <option value="100">100</option>
      <option value="200">200</option>
    </select>
  </div>

  <!-- 3a) RSI length -->
  <div class="col-6 col-md-1">
    <label for="RSI_length" class="form-label">
      <i class="bi bi-speedometer2"></i> RSI
    </label>
    <select id="RSI_length" class="form-select">
      <option value="" disabled selected>Len</option>
      <option value="9">9</option>
      <option value="14">14</option>
      <option value="21">21</option>
    </select>
  </div>
  <!-- 3b) RSI overbought threshold -->
  <div class="col-6 col-md-1">
    <label for="RSI_overbought" class="form-label">&nbsp;</label>
    <select id="RSI_overbought" class="form-select">
      <option value="" disabled selected>OB</option>
      <option value="70">70</option>
      <option value="75">75</option>
      <option value="80">80</option>
    </select>
  </div>
  <!-- 3c) RSI oversold threshold -->
  <div class="col-6 col-md-1">
    <label for="RSI_oversold" class="form-label">&nbsp;</label>
    <select id="RSI_oversold" class="form-select">
      <option value="" disabled selected>OS</option>
      <option value="30">30</option>
      <option value="25">25</option>
      <option value="20">20</option>
    </select>
  </div>

  <!-- 4a) MACD fast EMA length -->
  <div class="col-6 col-md-1">
    <label for="MACD_fast" class="form-label">
      <i class="bi bi-triangle-fill"></i> MACD
    </label>
    <select id="MACD_fast" class="form-select">
      <option value="" disabled selected>Fast</option>
      <option value="8">8</option>
      <option value="12">12</option>
      <option value="15">15</option>
    </select>
  </div>
  <!-- 4b) MACD slow EMA length -->
  <div class="col-6 col-md-1">
    <label for="MACD_slow" class="form-label">&nbsp;</label>
    <select id="MACD_slow" class="form-select">
      <option value="" disabled selected>Slow</option>
      <option value="21">21</option>
      <option value="26">26</option>
      <option value="30">30</option>
    </select>
  </div>
  <!-- 4c) MACD signal EMA length -->
  <div class="col-6 col-md-1">
    <label for="MACD_signal" class="form-label">&nbsp;</label>
    <select id="MACD_signal" class="form-select">
      <option value="" disabled selected>Sig</option>
      <option value="9">9</option>
      <option value="7">7</option>
      <option value="10">10</option>
    </select>
  </div>

  <!-- 5a) BB length -->
  <div class="col-6 col-md-1">
    <label for="BB_length" class="form-label">
      <i class="bi bi-bar-chart-fill"></i> BB
    </label>
    <select id="BB_length" class="form-select">
      <option value="" disabled selected>Len</option>
      <option value="10">10</option>
      <option value="20">20</option>
      <option value="30">30</option>
      <option value="50">50</option>
    </select>
  </div>
  <!-- 5b) BB StdDev multiplier -->
  <div class="col-6 col-md-1">
    <label for="BB_stddev" class="form-label">&nbsp;</label>
    <select id="BB_stddev" class="form-select">
      <option value="" disabled selected>SD</option>
      <option value="1.5">1.5</option>
      <option value="2.0">2.0</option>
      <option value="2.5">2.5</option>
      <option value="3.0">3.0</option>
    </select>
  </div>

  <!-- 6) News toggle -->
  <div class="col-6 col-md-2">
    <label class="form-label">
      <i class="bi bi-newspaper"></i> News
    </label>
    <div class="form-check form-switch">
      <input
        class="form-check-input"
        type="checkbox"
        id="use_news"
      />
      <label class="form-check-label" for="use_news">On/Off</label>
    </div>
  </div>

  <!-- 7) Apply button (unchanged) -->
  <div class="col-6 col-md-2 text-end">
    <button
      type="button"
      class="btn btn-success w-100"
      onclick="applyFilters()"
    >
      <i class="bi bi-arrow-repeat"></i> Apply
    </button>
  </div>
</div>
{# ─────────────────────────────────────────────────────────────────────── #}


  {# ─── “Clear All” button & Alerts Table ─── #}
  <div class="d-flex justify-content-end mb-2">
    <form
      action="{{ url_for('clear_all_alerts') }}"
      method="post"
      class="d-inline"
    >
      <button class="btn btn-sm btn-outline-warning" type="submit">
        ✏️ Clear All
      </button>
    </form>
  </div>

  <div class="table-responsive">
    <table class="table table-striped table-bordered alerts-table text-white">
      <thead class="table-light">
        <tr>
          <th style="width:10%;">Time</th>
          <th style="width:5%;">Symbol</th>
          <th style="width:8%;">Name</th>
          <th style="width:5%;">Price</th>
          <th style="width:7%;">VWAP</th>
          <th style="width:8%;">VWAP Diff</th>
          <th style="width:10%;">News</th>
          <th style="width:10%;">Spark</th>
          <th style="width:15%;">Triggers</th>
          <th style="width:5%;">Qty</th>
          <th style="width:3%;">Buy</th>
          <th style="width:3%;">Clear</th>
        </tr>
      </thead>
      <tbody>
        {% for alert in alerts %}
        <tr class="alert-row">
          <td>{{ alert['timestamp'] or '—' }}</td>
          <td>{{ alert['symbol'] or '—' }}</td>
          <td>{{ alert['name'] or '—' }}</td>
          <td>${{ '%.2f'|format(alert['price']|float) }}</td>
          <td>${{ '%.2f'|format(alert['vwap']|float) }}</td>
          <td>
            {% if alert['vwap_diff'] is not none %}
              {% if alert['vwap_diff'] < 0 %}
                <span class="text-success">
                  ${{ '%.2f'|format(alert['vwap_diff']|float) }}
                </span>
              {% else %}
                <span class="text-danger">
                  +${{ '%.2f'|format(alert['vwap_diff']|float) }}
                </span>
              {% endif %}
            {% else %}
              &mdash;
            {% endif %}
          </td>
          <td class="text-center">
            {% if alert['has_news'] %}
              <button class="news-btn" onclick="showNews('{{ alert['symbol'] }}')">
                📰
              </button>
              <div class="news-container" id="news-{{ alert['symbol'] }}"></div>
            {% else %}
              &mdash;
            {% endif %}
          </td>
          <td>
            {% if alert['sparkline'] %}
              <div class="sparkline-img">{{ alert['sparkline']|safe }}</div>
            {% else %}
              &mdash;
            {% endif %}
          </td>
          <td>
            {% if alert['triggers'] %}
              {{ alert['triggers']|safe }}
            {% else %}
              &mdash;
            {% endif %}
          </td>
          <td>
            <input
              type="number"
              name="qty"
              value="1"
              min="1"
              class="form-control form-control-sm qty-input"
            />
          </td>
          <td>
            <button
              class="btn-buy btn btn-sm w-100"
              onclick="buyStock('{{ alert['symbol'] }}', this)"
            >
              Buy
            </button>
          </td>
          <td>
            <form
              action="{{ url_for('clear_alert', id=alert['id']) }}"
              method="post"
              class="d-inline"
            >
              <button class="btn-clear btn btn-sm w-100" type="submit">
                Clear
              </button>
            </form>
          </td>
        </tr>
        {% else %}
        <tr>
          <td colspan="12" class="text-center">No alerts to display.</td>
        </tr>
        {% endfor %}
      </tbody>
    </table>
  </div>
{% endblock %}

<script>
  // Populate filter‐bar inputs from /alert/settings
  document.addEventListener('DOMContentLoaded', () => {
    fetch('/alert/settings')
      .then(res => res.json())
      .then(cfg => {
        document.getElementById('num_to_match').value   = cfg.num_to_match;
        document.getElementById('SMA_length').value     = cfg.SMA_length;
        document.getElementById('RSI_length').value     = cfg.RSI_length;
        document.getElementById('RSI_overbought').value = cfg.RSI_overbought;
        document.getElementById('RSI_oversold').value   = cfg.RSI_oversold;
        document.getElementById('MACD_fast').value      = cfg.MACD_fast;
        document.getElementById('MACD_slow').value      = cfg.MACD_slow;
        document.getElementById('MACD_signal').value    = cfg.MACD_signal;
        document.getElementById('BB_length').value      = cfg.BB_length;
        document.getElementById('BB_stddev').value      = cfg.BB_stddev;
        document.getElementById('use_news').checked     = (cfg.use_news === "true");
      });
  });

  function applyFilters() {
    const toMatch = document.getElementById('num_to_match').value;
    const smaLen  = document.getElementById('SMA_length').value;
    const rsiLen  = document.getElementById('RSI_length').value;
    const rsiOB   = document.getElementById('RSI_overbought').value;
    const rsiOS   = document.getElementById('RSI_oversold').value;
    const macdF   = document.getElementById('MACD_fast').value;
    const macdS   = document.getElementById('MACD_slow').value;
    const macdSig = document.getElementById('MACD_signal').value;
    const bbLen   = document.getElementById('BB_length').value;
    const bbSD    = document.getElementById('BB_stddev').value;
    const newsOn  = document.getElementById('use_news').checked ? "true" : "false";

    const updates = [
      { key: 'num_to_match',   value: toMatch },
      { key: 'SMA_length',     value: smaLen  },
      { key: 'RSI_length',     value: rsiLen  },
      { key: 'RSI_overbought', value: rsiOB  },
      { key: 'RSI_oversold',   value: rsiOS  },
      { key: 'MACD_fast',      value: macdF  },
      { key: 'MACD_slow',      value: macdS  },
      { key: 'MACD_signal',    value: macdSig},
      { key: 'BB_length',      value: bbLen  },
      { key: 'BB_stddev',      value: bbSD   },
      { key: 'use_news',       value: newsOn }
    ];

    let chain = Promise.resolve();
    updates.forEach(u => {
      chain = chain.then(() =>
        fetch(`/alert/settings/${u.key}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ value: u.value })
        })
      );
    });

    chain.then(() => {
      window.location.reload();
    }).catch(err => {
      alert('Error saving settings: ' + err);
    });
  }

  function buyStock(symbol, button) {
    const row = button.closest('tr');
    const qtyInput = row.querySelector('.qty-input');
    const qty = qtyInput ? parseInt(qtyInput.value) : 1;

    fetch('/simulation/buy', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ symbol: symbol, qty: qty })
    }).then(response => {
      if (response.ok) {
        alert(`Buy order sent for ${symbol} x${qty}`);
      } else {
        alert('Buy failed.');
      }
    });
  }

  function showNews(symbol) {
    const container = document.getElementById(`news-${symbol}`);
    container.innerHTML = 'Loading...';
    fetch(`/news/${symbol}`)
      .then(resp => resp.json())
      .then(data => {
        let html = '<ul class="list-unstyled mb-1">';
        data.headlines.forEach(h => {
          html += `<li>• ${h}</li>`;
        });
        html += `</ul><p><strong>Sentiment:</strong> ${data.sentiment}</p>`;
        container.innerHTML = html;
      })
      .catch(err => {
        container.innerHTML = '<p style="color:red;">Error loading news.</p>';
        console.error(err);
      });
  }
</script>
